# ------------------------------------------------------------------------------------------------------------------------
# GHA Reusable Called Workflow to run a Playwright Test
# ------------------------------------------------------------------------------------------------------------------------
name: z_template_smoke_test
run-name: Run Smoke Test

on:
  workflow_call:
    inputs:
      envCode:
        required: true
        type: string
      # testConfig:
      #   required: true
      #   type: string
      # testPath:
      #   required: true
      #   type: string

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: read
      checks: write
      pull-requests: read
    steps:
    - uses: actions/checkout@v4
    
    - name: Display Variables
      run: |-
        echo "envCode=${{ inputs.envCode }}"
        echo "Files in ${{ github.action_path }}"
        tree ${{ github.action_path }}
      continue-on-error: true

    - uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Run Playwright tests
      run: npx playwright test

      #run: npx playwright test ${{ inputs.testPath }} --config ${{ inputs.testConfig }}

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    # AZDO Variables and task...
    # - name: testResultsTitle
    #   value: 'Playwright ${{ parameters.testType }} ${{ parameters.environment }} Tests'
    # - name: testResultsFolderName
    #   value: 'test-results-${{ parameters.testType }}-${{ parameters.environment }}'
    # - name: testResultsFileName
    #   value: 'playwright-results-${{ parameters.testType }}-${{ parameters.environment }}.xml'
    # - name: testResultsFullPath
    #   value: '$(System.DefaultWorkingDirectory)\$(testResultsFolderName)\$(testResultsFileName)'
    # - task: PublishTestResults@2
    #   displayName: 'Report Test Results'
    #   inputs:
    #     testRunTitle: $(testResultsTitle)
    #     testResultsFormat: 'JUnit'
    #     testResultsFiles: $(testResultsFullPath)
    #   condition: succeededOrFailed()
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        files: |
          **/test-results-**/**/*.xml
      continue-on-error: true